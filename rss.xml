<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Blog by Arun Ghosh]]></title><description><![CDATA[Writes code and solve problems out of passion and for living.]]></description><link>https://theparadox.life/</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 04 May 2020 05:20:31 GMT</lastBuildDate><item><title><![CDATA[Rule-based chatbot from scratch using ReactJS and NodeJS]]></title><description><![CDATA[This gives you pointers on how to create a rule-based chatbot from scratch]]></description><link>https://theparadox.life//posts/rule-based-chatbot-from-scratch-using-reactjs-and-nodejs-p1</link><guid isPermaLink="false">https://theparadox.life//posts/rule-based-chatbot-from-scratch-using-reactjs-and-nodejs-p1</guid><pubDate>Thu, 30 Apr 2020 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;During &lt;a href=&quot;https://en.wikipedia.org/wiki/2020_coronavirus_lockdown_in_India&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Covid-19 lockdown in India&lt;/a&gt;, I was working on an e-commerce web application. The work was mostly maintenance, which was hard to keep you interested during a time when you are surrounded by the pandemic news.&lt;/p&gt;
&lt;p&gt;As a saviour there came a requirement. It was to create a chatbot that can&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Handle customer issues like&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;refund issue&lt;/li&gt;
&lt;li&gt;issue with placing order &lt;/li&gt;
&lt;li&gt;other order related issues  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Assist shopping by helping find the products and offers&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It came as a blessing since I can shift my focus on something other than the news and trolls.&lt;/p&gt;
&lt;p&gt;From the requirements it was a &lt;strong&gt;rule-based&lt;/strong&gt; chatbot. The conversation will be driven by the bot, i.e. the bot will ask some questions and provide the user with options. User can select and options and based on the option selected the bot will decide on the subsequent message. So it is more of &lt;strong&gt;Conversational User Interface(CUI)&lt;/strong&gt; than a fully fledged chatbot.&lt;/p&gt;
&lt;p&gt;To realise the requirement I had 2 options&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use an existing platforms like &lt;a href=&quot;https://yellowmessenger.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Yellow Messenger&lt;/a&gt;, &lt;a href=&quot;https://dialogflow.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Dialogflow&lt;/a&gt; or&lt;/li&gt;
&lt;li&gt;Create a custom chatbot from scratch&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I choose the later. Why? Because it gives you&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;More flexibility&lt;/li&gt;
&lt;li&gt;More learning opportunity&lt;/li&gt;
&lt;li&gt;More Challenge&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article will explain the basic backend design of the chatbot. The technology I choose was &lt;code class=&quot;language-text&quot;&gt;ReactJS&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;NestJS&lt;/code&gt;. The main reason being, I am comfortable with these and there is no need to switch context since both are JavaScript.&lt;/p&gt;
&lt;h2 id=&quot;conversation-contextstate&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conversation-contextstate&quot; aria-label=&quot;conversation contextstate permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conversation context/state&lt;/h2&gt;
&lt;p&gt;Now let us get into the basic steps in the chatbot conversation&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The conversation is initiated by the bot.&lt;/li&gt;
&lt;li&gt;The bot provides user with text and set of options.&lt;/li&gt;
&lt;li&gt;User selects an option.&lt;/li&gt;
&lt;li&gt;Bot processes user option and sends response.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In last step, where the bot process the user input, the application need &lt;code class=&quot;language-text&quot;&gt;chat context/state&lt;/code&gt;. This need to be persisted in the server-side against the current user session. It is more like a user session.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;session_id =&gt; (user chat context/state)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For that each conversation will have a &lt;code class=&quot;language-text&quot;&gt;session id&lt;/code&gt; and the &lt;code class=&quot;language-text&quot;&gt;state&lt;/code&gt; will be stored against it.&lt;/p&gt;
&lt;p&gt;The state should have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User information like user ID and name.&lt;/li&gt;
&lt;li&gt;What is the aim/intent of the conversation. For example initially the intent of the bot is to find what help the user need. If the user selects “refund issue”, then the intent is to resolve refund issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The state should have all the information required for the conversation. And so as of now we know that the session will have details on the user and intent.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IState&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  user&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    session&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    name&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  intent&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    current&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; IntentType&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    stack&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; IntentType&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;intent&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#intent&quot; aria-label=&quot;intent permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intent&lt;/h2&gt;
&lt;p&gt;Since the conversation is driven by the bot, at any point of the conversation the bot will have an &lt;code class=&quot;language-text&quot;&gt;intent&lt;/code&gt;. For example resolve refund issue, provide offer details, welcome user.&lt;/p&gt;
&lt;p&gt;An intent can have many steps. For example, an solve refund issue bot need to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Send an apology for the issue.&lt;/li&gt;
&lt;li&gt;Find the order having the issue.&lt;/li&gt;
&lt;li&gt;Find analyze situation and send a response.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This requires to have &lt;code class=&quot;language-text&quot;&gt;current intent&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;intent stack&lt;/code&gt;. So the intent information within the state will look like&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    intent&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// Current intent&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// Ex: Resolve Refund Issue&lt;/span&gt;
        current&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;resolve_refund_issue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// The intent stack&lt;/span&gt;
        stack&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So what is this current and stack? Let’s take an example ~ if the intent is the resolve refund issue, first we will be sending a sorry message.&lt;/p&gt;
&lt;p&gt;Initially when you send the intent as &lt;code class=&quot;language-text&quot;&gt;resolve_refund_issue&lt;/code&gt; the state will look like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;current&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;resolve_refund_issue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
stack&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the prerequisite of the intent will look like &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;prerequisite&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;send_sorry&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;select_order&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; So first we need to send the sorry message. To do this we stack the current intent and sent the current intent to &lt;code class=&quot;language-text&quot;&gt;send_sorry&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;current&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;send_sorry&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
stack&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;resolve_refund_issue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is like calling one function from another function. So similar to how call stack work. But the call stack is much more complicated.&lt;/p&gt;
&lt;p&gt;So now the state with user information and intent will look &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IState&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  user&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    session&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  intent&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    current&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; IntentType&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    stack&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; IntentType&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;intent-handler&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#intent-handler&quot; aria-label=&quot;intent handler permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intent handler&lt;/h2&gt;
&lt;p&gt;Each intent will have a handler associated with it. Intent handler will have following &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IIntentHandler&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// the prerequisites for the handler to work. For example the refund issue requires to send a sorry message and select an order&lt;/span&gt;
  prerequisites&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; IntentType&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// updateState takes in the state and user input and returns the updated state&lt;/span&gt;
  &lt;span class=&quot;token function-variable function&quot;&gt;updateState&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;arg0&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; IState&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; arg1&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;IState&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// getMessage takes in state and provides message for the user&lt;/span&gt;
  &lt;span class=&quot;token function-variable function&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;arg0&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; IState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; IMessage&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;prerequisites&lt;/code&gt;&lt;/strong&gt; is an array of intents. These intents should be satisfied before you can execute the current intent. For example &lt;code class=&quot;language-text&quot;&gt;refund_issue&lt;/code&gt; can have prerequisite like &lt;code class=&quot;language-text&quot;&gt;send_sorry&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;find_order_having_issue&lt;/code&gt;. So as mentioned in the previous section when you need to execute &lt;code class=&quot;language-text&quot;&gt;send_sorry&lt;/code&gt;, you will make this the current intent and stack &lt;code class=&quot;language-text&quot;&gt;refund_issue&lt;/code&gt;. It is like calling one function from another function.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;updateState&lt;/code&gt;&lt;/strong&gt; function takes in the current state and the user input and updates the state based on these two parameters. For example &lt;code class=&quot;language-text&quot;&gt;updateState&lt;/code&gt; for &lt;code class=&quot;language-text&quot;&gt;select_order&lt;/code&gt; intent will &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First update the state with the orders placed by the users for the purpose of asking user to select order. &lt;/li&gt;
&lt;li&gt;When the user selects the order, &lt;code class=&quot;language-text&quot;&gt;updateState&lt;/code&gt; shall update the state with the selected order.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The state can have an &lt;code class=&quot;language-text&quot;&gt;execute&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;heap&lt;/code&gt; object to store the details on the execution, like list of orders, selected orders &amp;#x26; status of execution.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  execute_status&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      select_order&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      result&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      success&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      completed&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  heap&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    select_order&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      orders&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; object&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; 
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;getMessage&lt;/code&gt;&lt;/strong&gt; function will return the message for the handler. The message will have text and options&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;typescript&quot;&gt;&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IMessage&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  texts&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  options&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    text&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A simple &lt;code class=&quot;language-text&quot;&gt;getMessage&lt;/code&gt; that requests user to select a brand will look like.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token function-variable function&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    texts&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;Which brand do you wish to explore?&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    options&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        text&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Wrogn Mens fashion by Virat Kholi&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;wrogn&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        text&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;HRX Mens fashion by Hrithik Roshan&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;hrx&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above example since a simple case is not consuming the state. But there are usecases where in we need to use state to return appropriate message to the user.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Open Source Projects]]></title><description><![CDATA[List of projects that have been open sourced]]></description><link>https://theparadox.life//posts/open-source-projects</link><guid isPermaLink="false">https://theparadox.life//posts/open-source-projects</guid><pubDate>Wed, 29 Jan 2020 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;Following are the list of projects that have open sourced.&lt;/p&gt;
&lt;h3 id=&quot;react-pin-input&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#react-pin-input&quot; aria-label=&quot;react pin input permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React PIN Input&lt;/h3&gt;
&lt;p&gt;React-PIN-Input is a React component o capture PIN/MPIN like input&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/arunghosh/react-heatmap-grid&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Github Link&lt;/a&gt;
| &lt;a href=&quot;https://codesandbox.io/s/8jnlxw359&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Demo Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/arunghosh/react-pin-input/raw/master/docs/pin.png&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;react-heatmap-grid&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#react-heatmap-grid&quot; aria-label=&quot;react heatmap grid permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React Heatmap Grid&lt;/h3&gt;
&lt;p&gt;This is a react component for heatmap visualisation in grid layout.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/arunghosh/react-heatmap-grid&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Github Link&lt;/a&gt; | &lt;a href=&quot;https://codesandbox.io/s/r4rvwkl3yn&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Demo Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/arunghosh/react-heatmap-grid/raw/master/docs/heatmap.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;react-timeline&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#react-timeline&quot; aria-label=&quot;react timeline permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React Timeline&lt;/h3&gt;
&lt;p&gt; A react component to display event in a vertical timeline format.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/arunghosh/react-time-line&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Github Link&lt;/a&gt; | &lt;a href=&quot;https://codesandbox.io/s/react-timeline-2y11e&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Demo Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/arunghosh/react-time-line/raw/master/docs/timeline.png&quot; alt=&quot;screenshot&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[What why and how of Time Series database]]></title><description><![CDATA[An article of what is Time Series data, why do we need Time Series database and how does Time Series database work.]]></description><link>https://theparadox.life//posts/what-why-and-how-of-timeseries</link><guid isPermaLink="false">https://theparadox.life//posts/what-why-and-how-of-timeseries</guid><pubDate>Tue, 31 Dec 2019 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;If you are following tech, there is good chance to encounter the term &lt;em&gt;Time Series Database&lt;/em&gt;. This article is indented to convey —&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is Time Series data?&lt;/li&gt;
&lt;li&gt;Why is Time Series becoming more relevant now?&lt;/li&gt;
&lt;li&gt;Why do we need a separate DB for handling Time Series data?&lt;/li&gt;
&lt;li&gt;How does Time Series DB work?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;what&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what&quot; aria-label=&quot;what permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What?&lt;/h3&gt;
&lt;p&gt;As per &lt;a href=&quot;https://en.wikipedia.org/wiki/Time_series&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;strong&gt;time series&lt;/strong&gt; is a series of data points indexed (or listed or graphed) in time order. Most commonly, a time series is a sequence taken at successive equally spaced points in time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Time Series data is a sequence of data points. And each data point is a combination of timestamp and a value. For example an application monitoring a server will be sending CPU usage at regular interval. Each entry will be a pair of timestamp and with the CPU usage. And the data will look like —&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Timestamp&lt;/th&gt;
&lt;th align=&quot;right&quot;&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2019-12-27T10:50:00&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019-12-27T10:51:00&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;24&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019-12-27T10:52:00&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019-12-27T10:53:00&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019-12-27T10:54:00&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It is getting more limelight now because of lot of Time Series data is being generated from sources like—&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IoT sensor — There are sensors every where from from big industries to activity sensor in the wrist watches/bands. They generate large amount of data that need to be stored and processed.&lt;/li&gt;
&lt;li&gt;Stock market price generates large amount of data that need to be processed real-time.&lt;/li&gt;
&lt;li&gt;Server monitoring — Servers need to be monitored for different factors like CPU usage, memory usage, disk IOPS, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;why&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#why&quot; aria-label=&quot;why permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h3&gt;
&lt;p&gt;The above server monitoring data looks simple, right? Simple enough to be handled by most of the data stores like Relational DB(PostgresSQL) or Document Store(MongoDB). Then why do we need a special database to manage time series data? The reason lies in the nature of Time Series data and the way it is managed/processed—&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;High write throughput&lt;/strong&gt; — need to support high write through put or rather high rate of INSERT operation. The operation is more of INSERT than update.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Analyze large range of data&lt;/strong&gt; — the query requirement might be to get the weekly average of the stock value of APPLE for the past 4 years.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data lifecycle management&lt;/strong&gt; — there can requirement where in we need to have higher precision for the recent data than old data. So as data becomes it old it need to be aggregated and downsampled.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above points limits the usage of RDBMS and Document Store from handling Time Series data. To summarize Time Series DB should&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support high INSERT rate&lt;/li&gt;
&lt;li&gt;Analyze large rage is data&lt;/li&gt;
&lt;li&gt;Manage TS data lifecycle needs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to the above mentioned points some DBs(&lt;a href=&quot;https://prometheus.io/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Prometheus&lt;/a&gt;) provide monitoring and alerting system.&lt;/p&gt;
&lt;h3 id=&quot;how&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how&quot; aria-label=&quot;how permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How?&lt;/h3&gt;
&lt;p&gt;A main factor that differentiates Time Series DB and other DBs is Indexing. The Indexing is designed based the fact that Time Series transaction are mostly INSERTs and not UPDATEs.&lt;/p&gt;
&lt;p&gt;Different Time Series DBs take different approach for indexing. For example &lt;a href=&quot;https://www.timescale.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;TimeScaleDB&lt;/a&gt; is build on top of &lt;a href=&quot;https://www.postgresql.org/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;PostgresSQL&lt;/a&gt;. It’s index is based on &lt;a href=&quot;https://en.wikipedia.org/wiki/B-tree&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;B-Tree&lt;/a&gt;. On the other hand &lt;a href=&quot;https://www.influxdata.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;InfluxDB&lt;/a&gt; has a new index by name &lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.7/concepts/time-series-index/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Time Series Index&lt;/a&gt;(TSI) based on &lt;a href=&quot;https://en.wikipedia.org/wiki/Log-structured_merge-tree&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;LSM Tree&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is an &lt;a href=&quot;https://blog.timescale.com/blog/time-series-data-why-and-how-to-use-a-relational-database-instead-of-nosql-d0cd6975e87c/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;interesting read&lt;/a&gt; on why TimeScaleDB went for an B-Tree based relational database for Time Series DB, given the fact that LSM Tree supports faster inserts than B-Tree.&lt;/p&gt;
&lt;h3 id=&quot;reference&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#reference&quot; aria-label=&quot;reference permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://habr.com/en/company/postgrespro/blog/441962/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Indexes in PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.7/concepts/time-series-index/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Time Series Index (TSI) overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.timescale.com/blog/time-series-data-why-and-how-to-use-a-relational-database-instead-of-nosql-d0cd6975e87c/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Why (and how) to use a relational database instead of NoSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://prometheus.io/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Prometheus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[What why and how of Docker Volumes]]></title><description><![CDATA[An quick overview (so not a detailed one) of docker volumes with some pointers for exploration.]]></description><link>https://theparadox.life//posts/what-why-and-how-of-docker-volumes</link><guid isPermaLink="false">https://theparadox.life//posts/what-why-and-how-of-docker-volumes</guid><pubDate>Thu, 10 Aug 2017 22:40:32 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;NOTE: The purpose of this article is to give an quick overview (so not a detailed one) of docker volumes with some pointers. And before you start it is good to read about &lt;a href=&quot;https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/#sharing-promotes-smaller-images&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Docker storage drivers&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;what&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what&quot; aria-label=&quot;what permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What?&lt;/h3&gt;
&lt;p&gt;What is Docker Volumes?&lt;/p&gt;
&lt;p&gt;Docker volumes is a mechanism for persisting data generated by and used by Docker containers. In a more technical way, volumes are directories that are outside of the default &lt;a href=&quot;https://en.wikipedia.org/wiki/UnionFS&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;Union File System&lt;/a&gt; and exist as normal directories and files in the host filesystem.&lt;/p&gt;
&lt;h3 id=&quot;why&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#why&quot; aria-label=&quot;why permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h3&gt;
&lt;p&gt;Why do we need volumes? What are the use cases?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log files and databases need to persist even when the container is removed.&lt;/li&gt;
&lt;li&gt;For sharing data across the containers.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So if you don’t use volumes(or &lt;a href=&quot;https://docs.docker.com/engine/admin/volumes/bind-mounts/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;bind mounts&lt;/a&gt;) you many end up loosing valuable data along with your container.&lt;/p&gt;
&lt;h3 id=&quot;how&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how&quot; aria-label=&quot;how permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How?&lt;/h3&gt;
&lt;p&gt;The docker volume works by mounting a container directory to the host filesystem. So all the reads and writes happens to the host filesystem and no the UFS. This makes it possible to persist data and share data.&lt;/p&gt;
&lt;p&gt;There are different ways to &lt;a href=&quot;https://docs.docker.com/engine/admin/volumes/volumes/#choosing-the--v-or-mount-flag&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;specify volumes&lt;/a&gt;(-v or -mount). In the &lt;a href=&quot;https://docs.docker.com/compose/overview/#compose-documentation&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;docker compose&lt;/a&gt; file you can add volumes via following ways (this can change depending on the version of your docker compose file).&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;docker&quot;&gt;&lt;pre class=&quot;language-docker&quot;&gt;&lt;code class=&quot;language-docker&quot;&gt;volumes&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;# Just specify a path and let the Engine create a volume&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; /var/lib/mysql

  &lt;span class=&quot;token comment&quot;&gt;# Specify an absolute path mapping&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; /opt/data&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;/var/lib/mysql

  &lt;span class=&quot;token comment&quot;&gt;# Path on the host, relative to the Compose file&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; ./cache&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;/tmp/cache

  &lt;span class=&quot;token comment&quot;&gt;# User-relative path&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; ~/configs&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;/etc/configs/&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;ro

  &lt;span class=&quot;token comment&quot;&gt;# Named volume&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; datavolume&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;/var/lib/mysql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;further-reading&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#further-reading&quot; aria-label=&quot;further reading permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further reading&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/admin/volumes/volumes/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://docs.docker.com/engine/admin/volumes/volumes/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/compose/compose-file/compose-file-v2/#volumes-volume_driver&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https://docs.docker.com/compose/compose-file/compose-file-v2/#volumes-volume_driver&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item></channel></rss>