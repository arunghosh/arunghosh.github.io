{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/create-react-starter-boilerplate","result":{"data":{"markdownRemark":{"id":"d955301b-c60b-5bc2-b89c-74d8fa2fb894","html":"<p><a href=\"https://github.com/arunghosh/create-react-starter-boilerplate\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Full source code</a></p>\n<p>There is a story of a hungry man who went begging for food. One generous person provided him fish and another taught him to fish. Sometimes it is better to provide means to earn food rather than food. Yeah… it depends of how hungry they are and how difficult is the means to earn food. So let’s have both, boilerplate and steps to create boilerplate.</p>\n<p>So why steps to create boilerplate rather than a boilerplate. With ready made boilerplate you may face the following: </p>\n<ul>\n<li>Not all the features are required</li>\n<li>Some packages are outdated</li>\n<li>You don’t what is happening</li>\n</ul>\n<p>For above reasons this article aims to detail the steps to create the boilerplate.</p>\n<p>The boilerplate aims to have the following</p>\n<ol>\n<li>TypeScript</li>\n<li><a href=\"#Folder-Structure\">Folder Structure</a></li>\n<li><a href=\"#Routing\">Routing</a></li>\n<li><a href=\"#Styling\">Styling</a></li>\n<li><a href=\"#Manage-Document-Head\">Manage Document Head</a></li>\n<li><a href=\"#Lazy-Loading\">Lazy Loading of Pages</a></li>\n<li><a href=\"#Setting-Error-Boundary\">Setting Error Boundary</a></li>\n<li><a href=\"#Testing\">Testing</a></li>\n<li><a href=\"#Precommit-Hooks\">Precommit Hooks</a></li>\n<li><a href=\"#Storybook\">Storybook</a></li>\n<li><a href=\"#State-Management\">State Management?</a></li>\n</ol>\n<h2 id=\"lets-us-start\" style=\"position:relative;\"><a href=\"#lets-us-start\" aria-label=\"lets us start permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lets us start</h2>\n<p>The starting point will be with <code class=\"language-text\">create-react-app</code></p>\n<p>Here you have a choice to go with or without <code class=\"language-text\">TypeScript</code>.</p>\n<p>Without TypeScript</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx create-react-app your-application-name </code></pre></div>\n<p>With TypeScript</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npx create-react-app your-application-name --template typescript</code></pre></div>\n<h2 id=\"folder-structure\" style=\"position:relative;\"><a href=\"#folder-structure\" aria-label=\"folder structure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Folder Structure</h2>\n<p>There is not hard and fast rule for the folder structure. The document follows the below structure:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">+-- components\n|   +-- generics\n|   |   +-- Button\n|   |     |-- Button.tsx\n|   |     |-- Button.stories.tsx\n|   |     |-- Button.test.tsx\n|   +-- domain\n|   |   +-- UserCart\n|   |     |-- UserCart.tsx\n|   |     |-- UserCart.stories.tsx\n|   |     |-- UserCart.test.tsx\n|   +-- layout\n|   |   +-- NavBar\n|   |     |-- NavBar.tsx\n|   |     |-- NavBar.stories.tsx\n|   |     |-- NavBar.test.tsx\n|   +-- pages\n|   |   +-- HomePage\n|   |     |-- HomePage.tsx\n|   |     |-- HomePage.stories.tsx\n|   |     |-- HomePage.test.tsx\n+-- config\n|   |-- pages.ts\n|   |-- theme.ts\n+-- apis\n|   |-- auth.ts\n|   |-- cart.ts\n+-- utils\n    |-- tax.ts </code></pre></div>\n<h2 id=\"routing\" style=\"position:relative;\"><a href=\"#routing\" aria-label=\"routing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Routing</h2>\n<p>In case you have a more than one page, you need to have a router. For routing we are using <a href=\"https://github.com/ReactTraining/react-router\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Router</a></p>\n<p>First install <code class=\"language-text\">react-router</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> yarn add react-router-dom</code></pre></div>\n<p>And if you are using <code class=\"language-text\">TypeScript</code> add types</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add @types/react-router</code></pre></div>\n<p>It is good to have a <code class=\"language-text\">config/pages.ts</code> file where you define all the pages related information. And you can define all your pages in a <code class=\"language-text\">components/pages</code> folder.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HomePage<span class=\"token punctuation\">,</span> AboutPage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/pages\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pages <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  home<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">\"Home\"</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n    Component<span class=\"token operator\">:</span> HomePage\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  about<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">\"About\"</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> <span class=\"token string\">\"/about\"</span><span class=\"token punctuation\">,</span>\n    Component<span class=\"token operator\">:</span> AboutPage\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This is in the form of a directory so that we can refer <code class=\"language-text\">pages.about.path</code>. To get as an array use <code class=\"language-text\">Object.values(pages)</code></p>\n<p>We will also have simple navigation bar <code class=\"language-text\">components/layouts/NavBar.tsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> pages <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../config/pages\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TopNav</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>pages<span class=\"token punctuation\">.</span>home<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>pages<span class=\"token punctuation\">.</span>about<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>About<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And in the <code class=\"language-text\">App.tsx</code> </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Switch<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> pages <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./config/pages\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./App.css\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>pages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">page<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>Route\n              key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span>\n              exact\n              path<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>page<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">}</span>\n              render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> \n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>TopNav <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>page<span class=\"token punctuation\">.</span>Component <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Once done you will have <code class=\"language-text\">/</code> pointing to the <code class=\"language-text\">Home Page</code> and <code class=\"language-text\">/about</code> pointing to the <code class=\"language-text\">About Page</code>.</p>\n<h2 id=\"manage-document-head\" style=\"position:relative;\"><a href=\"#manage-document-head\" aria-label=\"manage document head permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Manage Document Head</h2>\n<p>We will use <a href=\"https://www.npmjs.com/package/react-helmet-async\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">react-helment-async</code></a> to manage document head.\nTher is npm package <code class=\"language-text\">react-helment</code> which is used manage changes to the document head like <code class=\"language-text\">title</code>, <code class=\"language-text\">metadata</code>, etc. But then why <code class=\"language-text\">react-helment-async</code> instead of <code class=\"language-text\">react-helmet</code>?</p>\n<blockquote>\n<p>The <code class=\"language-text\">react-helmet</code> relies on <code class=\"language-text\">react-side-effect</code>, which is not <strong>thread-safe</strong>. If you are doing anything asynchronous on the server, you need Helmet to encapsulate data on a per-request basis, this package does just that.</p>\n</blockquote>\n<p>Install </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> react-helmet-async</code></pre></div>\n<p>Now to change <code class=\"language-text\">title</code> in relation with the page loaded, the <code class=\"language-text\">App.tsx</code> will be </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Helmet<span class=\"token punctuation\">,</span> HelmetProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-helmet-async\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ....</span>\n<span class=\"token comment\">// ....</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>HelmetProvider<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n<span class=\"token comment\">// ....</span>\n<span class=\"token comment\">// ....</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>Helmet<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>page<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Helmet<span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>TopNav <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>page<span class=\"token punctuation\">.</span>Component <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token comment\">// ....</span>\n<span class=\"token comment\">// ....</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>HelmetProvider<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"styling\" style=\"position:relative;\"><a href=\"#styling\" aria-label=\"styling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Styling</h2>\n<p>When it comes to styling there are many choices: </p>\n<ul>\n<li>Pre-processors like <code class=\"language-text\">sass</code> or <code class=\"language-text\">less</code></li>\n<li>UI libraries like <a href=\"https://getbootstrap.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Bootstrap</a>, <a href=\"https://ant.design/docs/react/introduce\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ant Design</a></li>\n<li>Minimal utility library like <a href=\"https://www.tailwindtoolbox.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Tailwind</a></li>\n<li>Or <a href=\"https://styled-components.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">styled-components</a></li>\n</ul>\n<p>Here we will be using <code class=\"language-text\">styled-components</code>. The choice depends on the application requirement and the team. If the requirement is to create custom theme with you should go with something like <code class=\"language-text\">sass</code> or <code class=\"language-text\">styled-components</code>. But when you are running short of time and the design is a cliche (like an admin dashboard) go with <code class=\"language-text\">bootstrap</code> or <code class=\"language-text\">ant design</code>.</p>\n<p>Install</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> styled-components</code></pre></div>\n<p>And if you are using <code class=\"language-text\">TypeScript</code> add types</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @types/styled-components</code></pre></div>\n<p>So Let’s make the NavBar look better</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> pages <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../config/pages\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> NavCtnr <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>aside<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  width: 100%;\n  background: #555;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> NavList <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>ul<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> NavItem <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>li<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  a {\n    text-decoration: none;\n    padding: 1rem;\n    display: inline-block;\n    color: #eee;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TopNav</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>NavCtnr<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>NavList<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>NavItem<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>pages<span class=\"token punctuation\">.</span>home<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavItem<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>NavItem<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>pages<span class=\"token punctuation\">.</span>about<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>About<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavItem<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavList<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>NavCtnr<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>It is not a good practice to hardcode the style values like above. The <a href=\"https://styled-components.com/docs/advanced#theming\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ThemeProvider</a> from <code class=\"language-text\">styled-component</code> should be used.</p>\n<p>So let us define our theme in <code class=\"language-text\">config/theme.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  light <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    primary<span class=\"token operator\">:</span> <span class=\"token string\">\"#19f\"</span><span class=\"token punctuation\">,</span>\n    background<span class=\"token operator\">:</span> <span class=\"token string\">\"#eee\"</span><span class=\"token punctuation\">,</span>\n    foreground<span class=\"token operator\">:</span> <span class=\"token string\">\"#444\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  dark <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    primary<span class=\"token operator\">:</span> <span class=\"token string\">\"#19f\"</span><span class=\"token punctuation\">,</span>\n    background<span class=\"token operator\">:</span> <span class=\"token string\">\"#444\"</span><span class=\"token punctuation\">,</span>\n    foreground<span class=\"token operator\">:</span> <span class=\"token string\">\"#eee\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p> And the components need to wrapped with the <code class=\"language-text\">ThemeProvider</code> in <code class=\"language-text\">App.tsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ....</span>\n<span class=\"token comment\">// ....</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ThemeProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> theme <span class=\"token keyword\">from</span> <span class=\"token string\">\"./config/theme\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ....</span>\n<span class=\"token comment\">// ....</span>\n     <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n       <span class=\"token operator\">&lt;</span>ThemeProvider theme<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">.</span>dark<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n         <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n             <span class=\"token comment\">// ....</span>\n             <span class=\"token comment\">// ....</span>\n           <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n       <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ThemeProvider<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n<span class=\"token comment\">// ....</span>\n<span class=\"token comment\">// ....</span></code></pre></div>\n<p>Now in the <code class=\"language-text\">Navbar</code> you can</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> NavItem <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>li<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  a {\n    text-decoration: none;\n    padding: 1rem;\n    display: inline-block;\n    color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">.</span>primary<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"lazy-loading\" style=\"position:relative;\"><a href=\"#lazy-loading\" aria-label=\"lazy loading permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lazy Loading</h2>\n<p>Consider an application having 10 pages. Normally when the first page loads, it loads JS required for all the pages, not just the current page.  This is normal loading (eager loading). Via lazy loading the application can be made to load only the JS required for the current page. The rest of the resources will be loaded when requested for. It is on-demand loading(lazy) of the resources rather than eager loading all of them. This helps to improve the initial loading time.</p>\n<p>To enable lazy loading we are making a few changes to the <code class=\"language-text\">config/pages.ts</code> lazy load the pages. Instead of loading pages directly we need to lazy load it.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> lazy <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> HomePage <span class=\"token operator\">=</span> <span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../components/pages/HomePage\"</span> <span class=\"token comment\">/* webpackChunkName: \"HomePage\" */</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> AboutPage <span class=\"token operator\">=</span> <span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../components/pages/AboutPage\"</span> <span class=\"token comment\">/* webpackChunkName: \"AboutPage\" */</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ....</span>\n<span class=\"token comment\">// ....</span></code></pre></div>\n<p>Now we will define a simple loading indicator in <code class=\"language-text\">pages/generics/LoadingIndicator.tsx</code>. You can make it fancier as you wish</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">LoadingIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Loading<span class=\"token operator\">...</span>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And in the <code class=\"language-text\">App.tsx</code> we will wrap the page component with <code class=\"language-text\">Suspense</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Suspense <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoadingIndicator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/generics\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// .....</span>\n<span class=\"token comment\">// .....</span>\n                  <span class=\"token operator\">&lt;</span>Suspense fallback<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>LoadingIndicator <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>page<span class=\"token punctuation\">.</span>Component <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Suspense<span class=\"token operator\">></span>\n<span class=\"token comment\">// .....</span>\n<span class=\"token comment\">// .....</span></code></pre></div>\n<h2 id=\"setting-error-boundary\" style=\"position:relative;\"><a href=\"#setting-error-boundary\" aria-label=\"setting error boundary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting Error Boundary</h2>\n<p>Since we are lazy loading the component, what if the component fails to load. Rather than making the whole screen go blank, we can provide better user experience by using <a href=\"https://reactjs.org/docs/error-boundaries.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Error Boundaries</a>. Error boundary will help to replace component having exception with a fallback component. </p>\n<p>We will be using <a href=\"https://github.com/bvaughn/react-error-boundary\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-error-boundary</a>.</p>\n<p>Install</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> react-error-boundary</code></pre></div>\n<p>Add <code class=\"language-text\">components/generics/ErrorFallback/ErrorFallback.tsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ErrorFallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      Sorry<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span> Failed to load<span class=\"token punctuation\">.</span>   \n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And in the <code class=\"language-text\">App.tsx</code> page add the following</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//....</span>\n<span class=\"token comment\">//....</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Switch<span class=\"token punctuation\">,</span> Route <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LoadingIndicator<span class=\"token punctuation\">,</span> ErrorFallback <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/generics\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//....</span>\n<span class=\"token comment\">//....</span>\n                    <span class=\"token operator\">&lt;</span>ErrorBoundary FallbackComponent<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ErrorFallback<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                      <span class=\"token operator\">&lt;</span>Suspense fallback<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>LoadingIndicator <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>page<span class=\"token punctuation\">.</span>Component <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Suspense<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ErrorBoundary<span class=\"token operator\">></span>\n<span class=\"token comment\">//....</span>\n<span class=\"token comment\">//....</span></code></pre></div>\n<p><strong>References</strong></p>\n<ul>\n<li><a href=\"https://egghead.io/lessons/react-using-react-error-boundaries-to-handle-errors-in-react-components\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Egghead.io Video</a></li>\n<li><a href=\"https://reactjs.org/docs/error-boundaries.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Official React Documentation</a></li>\n</ul>\n<h2 id=\"testing\" style=\"position:relative;\"><a href=\"#testing\" aria-label=\"testing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Testing</h2>\n<p>The <a href=\"https://testing-library.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">react-testing-library</code></a> will be used for testing. This comes bundled with <code class=\"language-text\">create-react-app</code>.</p>\n<p>Let’s write a test for <code class=\"language-text\">ErrorFallback</code> component in <code class=\"language-text\">components/generics/ErrorFallback/ErrorFallback.test.tsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@testing-library/react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ErrorFallback <span class=\"token keyword\">from</span> <span class=\"token string\">\"./ErrorFallback\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"renders learn react link\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getByText <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>ErrorFallback <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> linkElement <span class=\"token operator\">=</span> <span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/Failed to load/i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>linkElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBeInTheDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To run test</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn test</code></pre></div>\n<h2 id=\"precommit-hooks\" style=\"position:relative;\"><a href=\"#precommit-hooks\" aria-label=\"precommit hooks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Precommit Hooks</h2>\n<blockquote>\n<p><a href=\"https://githooks.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Git hooks</a> are scripts that Git executes before or after events such as: commit, push, and receive. Git hooks are a built-in feature - no need to download anything. Git hooks are run locally.</p>\n</blockquote>\n<p>Before commiting changes to the repository it is good practice to check if:</p>\n<ul>\n<li>All tests are passing</li>\n<li>There are no linting errors</li>\n</ul>\n<p>To enable precommit hook, add <a href=\"https://www.npmjs.com/package/pre-commit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">pre-commit</a> as dev dependency</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add --dev pre-commit</code></pre></div>\n<p>Now make the following changes to <code class=\"language-text\">packages.json</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token unchanged\">     \"test\": \"react-scripts test\",\n</span><span class=\"token inserted-sign inserted\">+    \"ci-test\": \"CI=true react-scripts test\",\n</span><span class=\"token unchanged\">     \"eject\": \"react-scripts eject\",\n     \"storybook\": \"start-storybook -p 9009 -s public\",\n</span><span class=\"token deleted-sign deleted\">-    \"build-storybook\": \"build-storybook -s public\"\n</span><span class=\"token inserted-sign inserted\">+    \"build-storybook\": \"build-storybook -s public\",\n+    \"lint\": \"eslint --ext js,ts,tsx src\"\n</span><span class=\"token unchanged\">   },\n</span><span class=\"token inserted-sign inserted\">+  \"pre-commit\": [\n+    \"lint\",\n+    \"ci-test\"\n+  ],\n</span><span class=\"token unchanged\">   \"eslintConfig\": {\n     \"extends\": \"react-app\"\n   },</span></code></pre></div>\n<p>The <code class=\"language-text\">ci-test</code> is added so that test can be executed in the CI mode rather than in the watch mode.</p>\n<p>If in case you want to commit without verification you can use <code class=\"language-text\">--no-verify</code>.</p>\n<h2 id=\"storybook\" style=\"position:relative;\"><a href=\"#storybook\" aria-label=\"storybook permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storybook</h2>\n<blockquote>\n<p><a href=\"https://storybook.js.org/docs/guides/guide-react/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Storybook</a> is a user interface development environment and playground for UI components. The tool enables developers to create components independently and showcase components interactively in an isolated development environment.</p>\n</blockquote>\n<blockquote>\n<p>Storybook runs outside of the main app so users can develop UI components in isolation without worrying about app specific dependencies and requirements.</p>\n</blockquote>\n<p>Install (since we are using <code class=\"language-text\">create-react-app</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npx -p @storybook/cli sb init --type react_scripts</code></pre></div>\n<p>This will create 2 folders</p>\n<ol>\n<li><code class=\"language-text\">.storybook</code> containing the config</li>\n<li><code class=\"language-text\">stories</code> having the stories where we can add more stories</li>\n</ol>\n<p>The stories location can be edited in the <code class=\"language-text\">.storybook/main.js</code> file. Since we are using <code class=\"language-text\">tsx</code> files we will update the config as </p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">module.exports = {\n<span class=\"token deleted-sign deleted\">-  stories: ['../src/**/*.stories.js'],\n</span><span class=\"token inserted-sign inserted\">+  stories: ['../src/**/*.stories.tsx'],\n</span><span class=\"token unchanged\">  addons: [\n    '@storybook/preset-create-react-app',\n    '@storybook/addon-actions',\n    '@storybook/addon-links',\n  ],\n</span>};</code></pre></div>\n<p>Now add a story for <code class=\"language-text\">ErrorFallback</code> component in <code class=\"language-text\">components/generics/ErrorFallback/ErrorFallback.stories.tsx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ErrorFallback <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/generics\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">\"Error Fallback\"</span><span class=\"token punctuation\">,</span>\n  component<span class=\"token operator\">:</span> ErrorFallback\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Error</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>ErrorFallback <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now to run the storybook</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn storybook</code></pre></div>\n<h2 id=\"state-management\" style=\"position:relative;\"><a href=\"#state-management\" aria-label=\"state management permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State Management</h2>\n<p>This is not a mandatory component. When the components have lot of shared state you will have to go for a <a href=\"https://kentcdodds.com/blog/application-state-management-with-react\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">state management</a> to avoid <a href=\"https://kentcdodds.com/blog/prop-drilling/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">props drilling</a>.\nDo read the article mentioned here. It will give you a direction on State Management. It mentions about state management methods like</p>\n<ol>\n<li><a href=\"https://reactjs.org/docs/hooks-reference.html#usestate\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">useState</code></a></li>\n<li><a href=\"https://reactjs.org/docs/hooks-reference.html#usereducer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">useReducer</code></a></li>\n<li><a href=\"https://reactjs.org/docs/hooks-reference.html#usecontext\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">useContext</code></a></li>\n<li><a href=\"https://react-redux.js.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redux</a></li>\n</ol>\n<p>Other than the onces mentioned above there is new child in state management ~ <a href=\"https://github.com/facebookexperimental/Recoil\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Recoil</a> by Facebook. You can also checkout the <a href=\"https://egghead.io/playlists/getting-started-with-recoil-in-react-1fca\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">egghead.io video tutorial on Recoil</a></p>","fields":{"slug":"/posts/create-react-starter-boilerplate","tagSlugs":["/tag/react/","/tag/boilerplate/","/tag/lazy-loading/"]},"frontmatter":{"date":"2020-06-07T22:40:32.169Z","description":"Steps to create a React Boilerplate","tags":["React","Boilerplate","Lazy Loading"],"title":"Create React Boilerplate","socialImage":null}}},"pageContext":{"slug":"/posts/create-react-starter-boilerplate"}}}